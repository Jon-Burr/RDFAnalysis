#ifndef RDFAnalysis_TObjectWriter_ICC
#define RDFAnalysis_TObjectWriter_ICC

namespace RDFAnalysis {
  template <typename Detail>
    TObjectWriter<Detail>::TObjectWriter(const std::string& subDirName) :
      m_subDirName(subDirName)
    {}

  template <typename Detail>
    void TObjectWriter<Detail>::write(
        Node<Detail>& node,
        TDirectory* directory,
        std::size_t /* depth */)
    {
      // Loop over each object and save it
      for (SysResultPtr<TObject>& object : node.objects() ) {
        for (auto& objPair : object) {
          // Get the directory that corresponds to this systematic
          TDirectory* systDir =
            getMkdir(directory, objPair.first + "/" + m_subDirName);
          systDir->WriteTObject(objPair.second.get() );
        }
      }
    }

  template <typename Detail>
    void TObjectWriter<Detail>::write(
        typename Scheduler<Detail>::Region& region,
        TDirectory* directory,
        std::size_t /* depth */)
    {
      // Loop over each object and save it
      for (SysResultPtr<TObject>& object : region.objects) {
        for (auto& objPair : object) {
          // Get the directory that corresponds to this systematic
          TDirectory* systDir =
            getMkdir(directory, objPair.first + "/" + m_subDirName);
          systDir->WriteTObject(objPair.second.get() );
        }
      }
    }
} //> end namespace RDFAnalysis

#endif //> !RDFAnalysis_TObjectWriter_ICC
